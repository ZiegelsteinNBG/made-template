pipeline TreesPipeline{
        /*
            Keep only valid data we are interested in
            Define types of values and constraints for them
            We are only interested in Vogelsang, valid stadtteil start with "Vogelsang"
            "id" contains geopoints with the following pattern:
            {geo-coordinate 1}, {geo-coordinate 2}
            a geo-coordinate is defined as {1-3 numbers}.{numbers}
            + Drop "baumart_deutsch" column
            Drop all rows with invalid values
            Assign fitting built-in SQLite types (e.g., BIGINT, TEXT or FLOAT) to all columns
            + Write data into a SQLite database called “trees.sqlite”, in the table “trees”
        */
    TreesExtractor
        -> TreesTextFileInterpreter;

    TreesTextFileInterpreter
        -> TreesCSVInterpreter
        -> GermanTreesDeleter
        -> TreesTableInterpreter
        -> TreesLoader;

    block TreesExtractor oftype HttpExtractor {
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv";
    }

    block TreesTextFileInterpreter oftype TextFileInterpreter { }

    block TreesCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block GermanTreesDeleter oftype ColumnDeleter {
        delete: [column E];
    }



    block TreesTableInterpreter oftype TableInterpreter{
        header: false;
        columns: [
            "lfd_nr" oftype integer,
            "stadtteil" oftype VogelsangStdt,
            "standort" oftype text,
            "baumart_botanisch" oftype text,
            "id" oftype GeopointConstraint,
            "baumfamilie" oftype text
        ];
    }

    valuetype VogelsangStdt  oftype text{
        constraints: [
            VogelsangOnly
        ];
    }
    constraint VogelsangOnly on text: value in ["Vogelsang", "Vogelsang Bols-Siedlung"];//"Vogelsang"

   constraint GeoAllow oftype RegexConstraint {
        regex: /([0-9]{1,3}\.[0-9]+), ([0-9]{1,3}\.[0-9]+)/;
    }

    valuetype Geopoint oftype text {
        constraints: [
            GeopointConstraint,
        ];
}
        
    block TreesLoader oftype SQLiteLoader {
        table: "trees";
        file: "./trees.sqlite";
    }
}
